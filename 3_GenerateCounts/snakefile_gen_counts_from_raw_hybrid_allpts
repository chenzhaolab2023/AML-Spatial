import json
import numpy as np
from PIL import  Image
import io
import base64
import zlib
import cv2
from string import Template
import cv2
import glob
import os
import tifffile
from snakemake_scripts.Generate_counts_from_raw_membrane import generate_counts

localrules: all

P51_FOVs = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22']
P52_FOVs = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25']
P53_FOVs = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25']
P56_FOVs = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25']
P57_FOVs = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21']
P58_FOVs = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23']
    
rule all:
    input:
        expand("/data/Zhaolab/1_AMLCosMx/Final_scripts/3_GenerateCounts/P51_hybrid_counts/P51_hybrid_FOV{fovs}_counts_xy.csv", fovs=P51_FOVs),
        expand("/data/Zhaolab/1_AMLCosMx/Final_scripts/3_GenerateCounts/P52_hybrid_counts/P52_hybrid_FOV{fovs}_counts_xy.csv", fovs=P52_FOVs),
        expand("/data/Zhaolab/1_AMLCosMx/Final_scripts/3_GenerateCounts/P53_hybrid_counts/P53_hybrid_FOV{fovs}_counts_xy.csv", fovs=P53_FOVs),
        expand("/data/Zhaolab/1_AMLCosMx/Final_scripts/3_GenerateCounts/P56_hybrid_counts/P56_hybrid_FOV{fovs}_counts_xy.csv", fovs=P56_FOVs),
        expand("/data/Zhaolab/1_AMLCosMx/Final_scripts/3_GenerateCounts/P57_hybrid_counts/P57_hybrid_FOV{fovs}_counts_xy.csv", fovs=P57_FOVs),
        expand("/data/Zhaolab/1_AMLCosMx/Final_scripts/3_GenerateCounts/P58_hybrid_counts/P58_hybrid_FOV{fovs}_counts_xy.csv", fovs=P58_FOVs)

rule P51_gen_counts:
    input:
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/3_GenerateCounts/Nanostring_counts/P51_R1158_S1_tx_file.csv",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/2_Segmentation/3_NucMemMerging/P51_hybrid/labels_predicted_2_15_24/20220228_173209_S1_C902_P99_N99_F0{fovs}_normalized_cp_masks.tif",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_173209_S1/20220228_173209_S1_C902_P99_N99_F0{fovs}_Z001.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_173209_S1/20220228_173209_S1_C902_P99_N99_F0{fovs}_Z002.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_173209_S1/20220228_173209_S1_C902_P99_N99_F0{fovs}_Z003.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_173209_S1/20220228_173209_S1_C902_P99_N99_F0{fovs}_Z004.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_173209_S1/20220228_173209_S1_C902_P99_N99_F0{fovs}_Z005.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_173209_S1/20220228_173209_S1_C902_P99_N99_F0{fovs}_Z006.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_173209_S1/20220228_173209_S1_C902_P99_N99_F0{fovs}_Z007.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_173209_S1/20220228_173209_S1_C902_P99_N99_F0{fovs}_Z008.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_173209_S1/20220228_173209_S1_C902_P99_N99_F0{fovs}_Z009.TIF"
    output:
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/3_GenerateCounts/P51_hybrid_counts/P51_hybrid_FOV{fovs}_counts_xy.csv",
    params:
        "{fovs}"
    threads: 2
    resources: mem_mb=10000, runtime=360
    run:
        counts = generate_counts(input[0], params[0], input[1], input[2], input[3], input[4], input[5], input[6], input[7], input[8], input[9], input[10])
        comment = '# Counts table for P51_' + params[0] + ' produced on 2/19/2024 using script Generate_counts_from_raw_membrane.py\n'
        with open(output[0], 'w') as f:
            f.write(comment)
        counts.to_csv(output[0], mode='a')
        
        
rule P52_gen_counts:
    input:
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/3_GenerateCounts/Nanostring_counts/P52_R1149_S1_tx_file.csv",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/2_Segmentation/3_NucMemMerging/P52_hybrid/labels_predicted_2_15_24/20220215_094003_S1_C902_P99_N99_F0{fovs}_normalized_cp_masks.tif",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S1/20220215_094003_S1_C902_P99_N99_F0{fovs}_Z001.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S1/20220215_094003_S1_C902_P99_N99_F0{fovs}_Z002.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S1/20220215_094003_S1_C902_P99_N99_F0{fovs}_Z003.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S1/20220215_094003_S1_C902_P99_N99_F0{fovs}_Z004.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S1/20220215_094003_S1_C902_P99_N99_F0{fovs}_Z005.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S1/20220215_094003_S1_C902_P99_N99_F0{fovs}_Z006.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S1/20220215_094003_S1_C902_P99_N99_F0{fovs}_Z007.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S1/20220215_094003_S1_C902_P99_N99_F0{fovs}_Z008.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S1/20220215_094003_S1_C902_P99_N99_F0{fovs}_Z009.TIF"
    output:
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/3_GenerateCounts/P52_hybrid_counts/P52_hybrid_FOV{fovs}_counts_xy.csv",
    params:
        "{fovs}"
    threads: 2
    resources: mem_mb=10000, runtime=360
    run:
        counts = generate_counts(input[0], params[0], input[1], input[2], input[3], input[4], input[5], input[6], input[7], input[8], input[9], input[10])
        comment = '# Counts table for P52_' + params[0] + ' produced on 2/19/2024 using script Generate_counts_from_raw_membrane.py\n'
        with open(output[0], 'w') as f:
            f.write(comment)
        counts.to_csv(output[0], mode='a')
        
        
rule P53_gen_counts:
    input:
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/3_GenerateCounts/Nanostring_counts/P53_R1149_S2_tx_file.csv",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/2_Segmentation/3_NucMemMerging/P53_hybrid/labels_predicted_2_15_24/20220215_094003_S2_C902_P99_N99_F0{fovs}_normalized_cp_masks.tif",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S2/20220215_094003_S2_C902_P99_N99_F0{fovs}_Z001.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S2/20220215_094003_S2_C902_P99_N99_F0{fovs}_Z002.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S2/20220215_094003_S2_C902_P99_N99_F0{fovs}_Z003.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S2/20220215_094003_S2_C902_P99_N99_F0{fovs}_Z004.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S2/20220215_094003_S2_C902_P99_N99_F0{fovs}_Z005.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S2/20220215_094003_S2_C902_P99_N99_F0{fovs}_Z006.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S2/20220215_094003_S2_C902_P99_N99_F0{fovs}_Z007.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S2/20220215_094003_S2_C902_P99_N99_F0{fovs}_Z008.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S2/20220215_094003_S2_C902_P99_N99_F0{fovs}_Z009.TIF"
    output:
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/3_GenerateCounts/P53_hybrid_counts/P53_hybrid_FOV{fovs}_counts_xy.csv",
    params:
        "{fovs}"
    threads: 2
    resources: mem_mb=10000, runtime=360
    run:
        counts = generate_counts(input[0], params[0], input[1], input[2], input[3], input[4], input[5], input[6], input[7], input[8], input[9], input[10])
        comment = '# Counts table for P53_' + params[0] + ' produced on 2/19/2024 using script Generate_counts_from_raw_membrane.py\n'
        with open(output[0], 'w') as f:
            f.write(comment)
        counts.to_csv(output[0], mode='a')
        
                
rule P56_gen_counts:
    input:
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/3_GenerateCounts/Nanostring_counts/P56_R1158_S2_tx_file.csv",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/2_Segmentation/3_NucMemMerging/P56_hybrid/labels_predicted_2_15_24/20220228_110038_S2_C902_P99_N99_F0{fovs}_normalized_cp_masks.tif",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_110038_S2/20220228_110038_S2_C902_P99_N99_F0{fovs}_Z001.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_110038_S2/20220228_110038_S2_C902_P99_N99_F0{fovs}_Z002.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_110038_S2/20220228_110038_S2_C902_P99_N99_F0{fovs}_Z003.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_110038_S2/20220228_110038_S2_C902_P99_N99_F0{fovs}_Z004.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_110038_S2/20220228_110038_S2_C902_P99_N99_F0{fovs}_Z005.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_110038_S2/20220228_110038_S2_C902_P99_N99_F0{fovs}_Z006.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_110038_S2/20220228_110038_S2_C902_P99_N99_F0{fovs}_Z007.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_110038_S2/20220228_110038_S2_C902_P99_N99_F0{fovs}_Z008.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_110038_S2/20220228_110038_S2_C902_P99_N99_F0{fovs}_Z009.TIF"
    output:
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/3_GenerateCounts/P56_hybrid_counts/P56_hybrid_FOV{fovs}_counts_xy.csv",
    params:
        "{fovs}"
    threads: 2
    resources: mem_mb=10000, runtime=360
    run:
        counts = generate_counts(input[0], params[0], input[1], input[2], input[3], input[4], input[5], input[6], input[7], input[8], input[9], input[10])
        comment = '# Counts table for P56_' + params[0] + ' produced on 2/19/2024 using script Generate_counts_from_raw_membrane.py\n'
        with open(output[0], 'w') as f:
            f.write(comment)
        counts.to_csv(output[0], mode='a')
        
        
rule P57_gen_counts:
    input:
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/3_GenerateCounts/Nanostring_counts/P57_R1158_S3_tx_file.csv",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/2_Segmentation/3_NucMemMerging/P57_hybrid/labels_predicted_2_15_24/20220228_110038_S3_C902_P99_N99_F0{fovs}_normalized_cp_masks.tif",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_110038_S3/20220228_110038_S3_C902_P99_N99_F0{fovs}_Z001.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_110038_S3/20220228_110038_S3_C902_P99_N99_F0{fovs}_Z002.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_110038_S3/20220228_110038_S3_C902_P99_N99_F0{fovs}_Z003.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_110038_S3/20220228_110038_S3_C902_P99_N99_F0{fovs}_Z004.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_110038_S3/20220228_110038_S3_C902_P99_N99_F0{fovs}_Z005.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_110038_S3/20220228_110038_S3_C902_P99_N99_F0{fovs}_Z006.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_110038_S3/20220228_110038_S3_C902_P99_N99_F0{fovs}_Z007.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_110038_S3/20220228_110038_S3_C902_P99_N99_F0{fovs}_Z008.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/28_110038_S3/20220228_110038_S3_C902_P99_N99_F0{fovs}_Z009.TIF"
    output:
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/3_GenerateCounts/P57_hybrid_counts/P57_hybrid_FOV{fovs}_counts_xy.csv",
    params:
        "{fovs}"
    threads: 2
    resources: mem_mb=10000, runtime=360
    run:
        counts = generate_counts(input[0], params[0], input[1], input[2], input[3], input[4], input[5], input[6], input[7], input[8], input[9], input[10])
        comment = '# Counts table for P57_' + params[0] + ' produced on 2/19/2024 using script Generate_counts_from_raw_membrane.py\n'
        with open(output[0], 'w') as f:
            f.write(comment)
        counts.to_csv(output[0], mode='a')
        
        
rule P58_gen_counts:
    input:
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/3_GenerateCounts/Nanostring_counts/P58_R1149_S3_tx_file.csv",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/2_Segmentation/3_NucMemMerging/P58_hybrid/labels_predicted_2_15_24/20220215_094003_S3_C902_P99_N99_F0{fovs}_normalized_cp_masks.tif",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S3/20220215_094003_S3_C902_P99_N99_F0{fovs}_Z001.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S3/20220215_094003_S3_C902_P99_N99_F0{fovs}_Z002.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S3/20220215_094003_S3_C902_P99_N99_F0{fovs}_Z003.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S3/20220215_094003_S3_C902_P99_N99_F0{fovs}_Z004.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S3/20220215_094003_S3_C902_P99_N99_F0{fovs}_Z005.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S3/20220215_094003_S3_C902_P99_N99_F0{fovs}_Z006.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S3/20220215_094003_S3_C902_P99_N99_F0{fovs}_Z007.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S3/20220215_094003_S3_C902_P99_N99_F0{fovs}_Z008.TIF",
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/0_RawImages/15_94003_S3/20220215_094003_S3_C902_P99_N99_F0{fovs}_Z009.TIF"
    output:
        "/data/Zhaolab/1_AMLCosMx/Final_scripts/3_GenerateCounts/P58_hybrid_counts/P58_hybrid_FOV{fovs}_counts_xy.csv",
    params:
        "{fovs}"
    threads: 2
    resources: mem_mb=10000, runtime=360
    run:
        counts = generate_counts(input[0], params[0], input[1], input[2], input[3], input[4], input[5], input[6], input[7], input[8], input[9], input[10])
        comment = '# Counts table for P58_' + params[0] + ' produced on 2/19/2024 using script Generate_counts_from_raw_membrane.py\n'
        with open(output[0], 'w') as f:
            f.write(comment)
        counts.to_csv(output[0], mode='a')
